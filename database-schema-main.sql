-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.assignment_submissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid NOT NULL,
  student_id uuid NOT NULL,
  class_id uuid,
  content text,
  attachments jsonb DEFAULT '[]'::jsonb,
  points_earned integer,
  max_points integer,
  feedback text,
  grade text,
  status text DEFAULT 'submitted'::text CHECK (status = ANY (ARRAY['submitted'::text, 'graded'::text, 'returned'::text, 'late'::text])),
  submitted_at timestamp with time zone DEFAULT now(),
  graded_at timestamp with time zone,
  due_date timestamp with time zone,
  is_late boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assignment_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT assignment_submissions_assignment_id_fkey FOREIGN KEY (assignment_id) REFERENCES public.assignments(id),
  CONSTRAINT assignment_submissions_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT assignment_submissions_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id)
);
CREATE TABLE public.assignments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  class_id uuid,
  subject_id uuid NOT NULL,
  title text NOT NULL,
  description text NOT NULL,
  instructions text,
  attachments jsonb DEFAULT '[]'::jsonb,
  resources jsonb DEFAULT '[]'::jsonb,
  max_points integer DEFAULT 100,
  due_date timestamp with time zone,
  is_published boolean DEFAULT false,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'published'::text, 'closed'::text])),
  difficulty_level text DEFAULT 'medium'::text CHECK (difficulty_level = ANY (ARRAY['easy'::text, 'medium'::text, 'hard'::text])),
  estimated_time_minutes integer,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assignments_pkey PRIMARY KEY (id),
  CONSTRAINT assignments_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT assignments_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id),
  CONSTRAINT assignments_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.class_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  class_id uuid NOT NULL,
  teacher_id uuid NOT NULL,
  student_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  scheduled_start timestamp with time zone NOT NULL,
  scheduled_end timestamp with time zone NOT NULL,
  actual_start timestamp with time zone,
  actual_end timestamp with time zone,
  status text DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text, 'no_show'::text])),
  meeting_url text,
  meeting_id text,
  duration_minutes integer,
  rate numeric,
  notes text,
  student_feedback text,
  teacher_feedback text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  zoom_meeting_id uuid,
  recording_available boolean DEFAULT false,
  tokens_charged numeric DEFAULT 10.00,
  tokens_deducted_at timestamp with time zone,
  tokens_credited_at timestamp with time zone,
  teacher_earning_usd numeric,
  student_cost_usd numeric,
  CONSTRAINT class_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT class_sessions_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id),
  CONSTRAINT class_sessions_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT class_sessions_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT class_sessions_zoom_meeting_id_fkey FOREIGN KEY (zoom_meeting_id) REFERENCES public.zoom_meetings(id)
);
CREATE TABLE public.classes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  student_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  hourly_rate numeric NOT NULL,
  currency text DEFAULT 'USD'::text,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'completed'::text, 'paused'::text, 'cancelled'::text])),
  start_date date DEFAULT CURRENT_DATE,
  end_date date,
  completed_sessions integer DEFAULT 0,
  notes text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT classes_pkey PRIMARY KEY (id),
  CONSTRAINT classes_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT classes_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT classes_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.collection_materials (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  collection_id uuid NOT NULL,
  material_id uuid NOT NULL,
  order_index integer DEFAULT 0,
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_materials_pkey PRIMARY KEY (id),
  CONSTRAINT collection_materials_collection_id_fkey FOREIGN KEY (collection_id) REFERENCES public.material_collections(id),
  CONSTRAINT collection_materials_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_library(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  type text DEFAULT 'direct'::text CHECK (type = ANY (ARRAY['direct'::text, 'group'::text, 'class'::text])),
  title text,
  class_id uuid,
  created_by uuid,
  participants ARRAY NOT NULL,
  last_message_at timestamp with time zone DEFAULT now(),
  is_archived boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT conversations_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id)
);
CREATE TABLE public.education_levels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  system_id uuid NOT NULL,
  level_name text NOT NULL,
  description text,
  order_index integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT education_levels_pkey PRIMARY KEY (id),
  CONSTRAINT education_levels_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.education_systems(id)
);
CREATE TABLE public.education_systems (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT education_systems_pkey PRIMARY KEY (id)
);
CREATE TABLE public.material_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  description text,
  icon_url text,
  parent_category_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT material_categories_pkey PRIMARY KEY (id),
  CONSTRAINT material_categories_parent_fkey FOREIGN KEY (parent_category_id) REFERENCES public.material_categories(id)
);
CREATE TABLE public.material_category_assignments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  material_id uuid NOT NULL,
  category_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT material_category_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT material_category_assignments_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_library(id),
  CONSTRAINT material_category_assignments_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.material_categories(id)
);
CREATE TABLE public.material_collections (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT material_collections_pkey PRIMARY KEY (id),
  CONSTRAINT material_collections_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.material_ratings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  material_id uuid NOT NULL,
  user_id uuid NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  review text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT material_ratings_pkey PRIMARY KEY (id),
  CONSTRAINT material_ratings_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_library(id),
  CONSTRAINT material_ratings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.material_usage (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  material_id uuid NOT NULL,
  user_id uuid NOT NULL,
  usage_type text NOT NULL CHECK (usage_type = ANY (ARRAY['download'::text, 'view'::text, 'assign'::text, 'share'::text])),
  class_id uuid,
  session_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT material_usage_pkey PRIMARY KEY (id),
  CONSTRAINT material_usage_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials_library(id),
  CONSTRAINT material_usage_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT material_usage_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id),
  CONSTRAINT material_usage_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.class_sessions(id)
);
CREATE TABLE public.materials_library (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  file_name text NOT NULL,
  file_type text NOT NULL CHECK (file_type = ANY (ARRAY['video'::text, 'pdf'::text, 'image'::text, 'document'::text, 'audio'::text, 'other'::text])),
  file_extension text NOT NULL,
  file_size_bytes bigint NOT NULL,
  file_path text NOT NULL,
  bucket_name text NOT NULL,
  download_url text,
  thumbnail_url text,
  subject_id uuid NOT NULL,
  grade_level text,
  difficulty_level text DEFAULT 'medium'::text CHECK (difficulty_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'all'::text])),
  tags ARRAY DEFAULT '{}'::text[],
  is_public boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  download_count integer DEFAULT 0,
  view_count integer DEFAULT 0,
  rating_average numeric DEFAULT 0.0,
  rating_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'archived'::text, 'pending_review'::text, 'rejected'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT materials_library_pkey PRIMARY KEY (id),
  CONSTRAINT materials_library_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT materials_library_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.meeting_participants (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  meeting_id uuid NOT NULL,
  user_id uuid NOT NULL,
  user_type text NOT NULL CHECK (user_type = ANY (ARRAY['teacher'::text, 'student'::text, 'guest'::text])),
  join_time timestamp with time zone,
  leave_time timestamp with time zone,
  duration_minutes integer DEFAULT 0,
  is_host boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meeting_participants_pkey PRIMARY KEY (id),
  CONSTRAINT meeting_participants_meeting_id_fkey FOREIGN KEY (meeting_id) REFERENCES public.zoom_meetings(id),
  CONSTRAINT meeting_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.meeting_recordings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  meeting_id uuid NOT NULL,
  recording_id text NOT NULL,
  recording_type text NOT NULL CHECK (recording_type = ANY (ARRAY['audio'::text, 'video'::text, 'shared_screen'::text])),
  file_size integer,
  play_url text,
  download_url text,
  status text DEFAULT 'processing'::text CHECK (status = ANY (ARRAY['processing'::text, 'completed'::text, 'failed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meeting_recordings_pkey PRIMARY KEY (id),
  CONSTRAINT meeting_recordings_meeting_id_fkey FOREIGN KEY (meeting_id) REFERENCES public.zoom_meetings(id)
);
CREATE TABLE public.meeting_rooms (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid NOT NULL,
  room_id text NOT NULL,
  provider text NOT NULL CHECK (provider = ANY (ARRAY['zoom'::text, 'google_meet'::text, 'teams'::text, 'jitsi'::text, 'custom'::text])),
  join_url text NOT NULL,
  host_url text,
  password text,
  waiting_room boolean DEFAULT true,
  recording_enabled boolean DEFAULT false,
  recording_url text,
  metadata jsonb DEFAULT '{}'::jsonb,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meeting_rooms_pkey PRIMARY KEY (id),
  CONSTRAINT meeting_rooms_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.class_sessions(id)
);
CREATE TABLE public.message_reads (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  message_id uuid NOT NULL,
  user_id uuid NOT NULL,
  read_at timestamp with time zone DEFAULT now(),
  CONSTRAINT message_reads_pkey PRIMARY KEY (id),
  CONSTRAINT message_reads_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id),
  CONSTRAINT message_reads_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  content text NOT NULL,
  message_type text DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'image'::text, 'file'::text, 'assignment'::text, 'system'::text])),
  attachments jsonb DEFAULT '[]'::jsonb,
  reply_to_id uuid,
  is_edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  is_deleted boolean DEFAULT false,
  deleted_at timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT messages_reply_to_id_fkey FOREIGN KEY (reply_to_id) REFERENCES public.messages(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type text NOT NULL,
  title text NOT NULL,
  message text NOT NULL,
  data jsonb DEFAULT '{}'::jsonb,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.onboarding_preferred_subjects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  onboarding_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT onboarding_preferred_subjects_pkey PRIMARY KEY (id),
  CONSTRAINT onboarding_preferred_subjects_onboarding_id_fkey FOREIGN KEY (onboarding_id) REFERENCES public.onboarding_responses(id),
  CONSTRAINT onboarding_preferred_subjects_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.onboarding_responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  system_id uuid,
  level_id uuid,
  interests ARRAY,
  preferred_language text DEFAULT 'en'::text,
  completed boolean DEFAULT false,
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT onboarding_responses_pkey PRIMARY KEY (id),
  CONSTRAINT onboarding_responses_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT onboarding_responses_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.education_systems(id),
  CONSTRAINT onboarding_responses_level_id_fkey FOREIGN KEY (level_id) REFERENCES public.education_levels(id)
);
CREATE TABLE public.parents (
  id uuid NOT NULL,
  children_ids ARRAY DEFAULT '{}'::uuid[],
  payment_methods jsonb DEFAULT '{}'::jsonb,
  billing_address jsonb,
  emergency_contact jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT parents_pkey PRIMARY KEY (id),
  CONSTRAINT parents_id_fkey FOREIGN KEY (id) REFERENCES public.profiles(id)
);
CREATE TABLE public.payment_methods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['card'::text, 'paypal'::text, 'bank_account'::text, 'crypto'::text])),
  provider text NOT NULL CHECK (provider = ANY (ARRAY['stripe'::text, 'paypal'::text, 'wise'::text, 'binance'::text, 'mpesa'::text, 'bank_transfer'::text])),
  provider_id text NOT NULL,
  last_four text,
  expiry_month integer,
  expiry_year integer,
  bank_name text,
  account_holder_name text,
  is_default boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  verification_status text DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['pending'::text, 'verified'::text, 'failed'::text, 'expired'::text])),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  phone_number text,
  mpesa_account_name text,
  stripe_payment_method_id text,
  stripe_account_id text,
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id),
  CONSTRAINT payment_methods_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.platform_earnings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transaction_id uuid NOT NULL,
  student_payment_usd numeric NOT NULL,
  teacher_earnings_usd numeric NOT NULL,
  platform_commission_usd numeric NOT NULL,
  commission_rate numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT platform_earnings_pkey PRIMARY KEY (id),
  CONSTRAINT platform_earnings_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.token_transactions(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  full_name text NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['student'::text, 'teacher'::text, 'parent'::text, 'admin'::text])),
  avatar_url text,
  phone text,
  bio text,
  date_of_birth date,
  location text,
  timezone text DEFAULT 'UTC'::text,
  language text DEFAULT 'en'::text,
  is_verified boolean DEFAULT false,
  is_active boolean DEFAULT true,
  last_login_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  search_vector tsvector,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid,
  student_id uuid NOT NULL,
  class_id uuid,
  session_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  title text,
  comment text,
  is_public boolean DEFAULT true,
  teacher_response text,
  teacher_response_at timestamp with time zone,
  is_verified boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT reviews_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT reviews_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id),
  CONSTRAINT reviews_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.class_sessions(id)
);
CREATE TABLE public.session_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  teacher_id uuid NOT NULL,
  class_id uuid,
  requested_start timestamp with time zone NOT NULL,
  requested_end timestamp with time zone NOT NULL,
  duration_hours numeric NOT NULL,
  tokens_required integer NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'cancelled'::text, 'expired'::text])),
  message text,
  teacher_response text,
  declined_reason text,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT session_requests_pkey PRIMARY KEY (id),
  CONSTRAINT session_requests_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT session_requests_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT session_requests_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.classes(id)
);
CREATE TABLE public.session_time_tracker (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid NOT NULL,
  start_time timestamp with time zone NOT NULL,
  pause_time timestamp with time zone,
  resume_time timestamp with time zone,
  total_paused_seconds integer DEFAULT 0,
  total_active_seconds integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT session_time_tracker_pkey PRIMARY KEY (id),
  CONSTRAINT session_time_tracker_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.class_sessions(id)
);
CREATE TABLE public.students (
  id uuid NOT NULL,
  grade_level text,
  school_name text,
  parent_id uuid,
  learning_goals ARRAY DEFAULT '{}'::text[],
  interests ARRAY DEFAULT '{}'::text[],
  wallet_balance numeric DEFAULT 0.00,
  tokens integer DEFAULT 0,
  preferred_languages ARRAY DEFAULT '{en}'::text[],
  learning_style text,
  timezone text DEFAULT 'UTC'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  education_system_id uuid,
  education_level_id uuid,
  CONSTRAINT students_pkey PRIMARY KEY (id),
  CONSTRAINT students_id_fkey FOREIGN KEY (id) REFERENCES public.profiles(id),
  CONSTRAINT students_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.profiles(id),
  CONSTRAINT students_education_system_id_fkey FOREIGN KEY (education_system_id) REFERENCES public.education_systems(id),
  CONSTRAINT students_education_level_id_fkey FOREIGN KEY (education_level_id) REFERENCES public.education_levels(id)
);
CREATE TABLE public.subjects (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  description text,
  category text NOT NULL,
  icon_url text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subjects_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_settings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  key text NOT NULL UNIQUE,
  value jsonb NOT NULL,
  description text,
  is_public boolean DEFAULT false,
  updated_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_settings_pkey PRIMARY KEY (id),
  CONSTRAINT system_settings_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.teacher_availability (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  timezone text NOT NULL DEFAULT 'UTC'::text,
  is_active boolean DEFAULT true,
  max_students_per_slot integer DEFAULT 1,
  buffer_minutes integer DEFAULT 15,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_availability_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_availability_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  document_type text NOT NULL CHECK (document_type = ANY (ARRAY['profile_image'::text, 'cover_image'::text, 'certificate'::text, 'diploma'::text, 'degree'::text, 'license'::text, 'portfolio_item'::text, 'id_verification'::text, 'background_check'::text])),
  file_name text NOT NULL,
  file_type text NOT NULL CHECK (file_type = ANY (ARRAY['image'::text, 'pdf'::text, 'document'::text])),
  file_size_bytes bigint NOT NULL,
  file_path text NOT NULL,
  bucket_name text NOT NULL,
  download_url text,
  thumbnail_url text,
  is_public boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  verified_at timestamp with time zone,
  verified_by uuid,
  verification_notes text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_documents_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_documents_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT teacher_documents_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.teacher_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  metric_date date NOT NULL,
  total_sessions integer DEFAULT 0,
  completed_sessions integer DEFAULT 0,
  cancelled_sessions integer DEFAULT 0,
  no_show_sessions integer DEFAULT 0,
  average_rating numeric DEFAULT 0.0,
  total_reviews integer DEFAULT 0,
  five_star_reviews integer DEFAULT 0,
  four_star_reviews integer DEFAULT 0,
  three_star_reviews integer DEFAULT 0,
  two_star_reviews integer DEFAULT 0,
  one_star_reviews integer DEFAULT 0,
  total_earnings numeric DEFAULT 0.0,
  total_hours_taught numeric DEFAULT 0.0,
  average_session_value numeric DEFAULT 0.0,
  new_students integer DEFAULT 0,
  returning_students integer DEFAULT 0,
  total_students integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_metrics_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_onboarding_availability (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  onboarding_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  timezone text DEFAULT 'UTC'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_onboarding_availability_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_onboarding_availability_onboarding_id_fkey FOREIGN KEY (onboarding_id) REFERENCES public.teacher_onboarding_responses(id)
);
CREATE TABLE public.teacher_onboarding_responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  max_children integer NOT NULL CHECK (max_children > 0),
  preferred_language text DEFAULT 'en'::text,
  completed boolean DEFAULT false,
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_onboarding_responses_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_onboarding_responses_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL UNIQUE,
  preferred_student_ages ARRAY DEFAULT '{}'::text[],
  preferred_class_duration integer DEFAULT 60,
  max_students_per_class integer DEFAULT 1,
  auto_accept_bookings boolean DEFAULT false,
  require_student_approval boolean DEFAULT true,
  email_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  push_notifications boolean DEFAULT true,
  marketing_emails boolean DEFAULT false,
  timezone text DEFAULT 'UTC'::text,
  working_hours jsonb DEFAULT '{}'::jsonb,
  vacation_mode boolean DEFAULT false,
  vacation_start_date date,
  vacation_end_date date,
  preferred_payment_method text DEFAULT 'stripe'::text CHECK (preferred_payment_method = ANY (ARRAY['stripe'::text, 'mpesa'::text, 'bank_transfer'::text])),
  auto_withdraw boolean DEFAULT false,
  withdraw_threshold numeric DEFAULT 100.00,
  profile_visibility text DEFAULT 'public'::text CHECK (profile_visibility = ANY (ARRAY['public'::text, 'private'::text, 'students_only'::text])),
  show_contact_info boolean DEFAULT false,
  show_social_links boolean DEFAULT true,
  show_verification_badges boolean DEFAULT true,
  language text DEFAULT 'en'::text,
  date_format text DEFAULT 'MM/DD/YYYY'::text,
  time_format text DEFAULT '12h'::text,
  currency text DEFAULT 'USD'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_preferences_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_preferred_curriculums (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  onboarding_id uuid NOT NULL,
  system_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_preferred_curriculums_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_preferred_curriculums_onboarding_id_fkey FOREIGN KEY (onboarding_id) REFERENCES public.teacher_onboarding_responses(id),
  CONSTRAINT teacher_preferred_curriculums_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.education_systems(id)
);
CREATE TABLE public.teacher_preferred_subjects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  onboarding_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_preferred_subjects_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_preferred_subjects_onboarding_id_fkey FOREIGN KEY (onboarding_id) REFERENCES public.teacher_onboarding_responses(id),
  CONSTRAINT teacher_preferred_subjects_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.teacher_schedule_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  template_name text NOT NULL,
  is_default boolean DEFAULT false,
  is_active boolean DEFAULT true,
  schedule_data jsonb NOT NULL,
  valid_from date,
  valid_until date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_schedule_templates_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_schedule_templates_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  skill_name text NOT NULL,
  skill_category text,
  proficiency_level text NOT NULL DEFAULT 'intermediate'::text CHECK (proficiency_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  years_experience integer DEFAULT 0,
  is_certified boolean DEFAULT false,
  certification_body text,
  certification_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_skills_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_skills_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.teacher_subjects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  proficiency_level text NOT NULL DEFAULT 'intermediate'::text CHECK (proficiency_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  years_experience integer DEFAULT 0,
  is_primary boolean DEFAULT false,
  is_available boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_subjects_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_subjects_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT teacher_subjects_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.teacher_time_off (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  teacher_id uuid NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['vacation'::text, 'sick_leave'::text, 'personal'::text, 'holiday'::text, 'maintenance'::text])),
  start_date date NOT NULL,
  end_date date NOT NULL,
  start_time time without time zone,
  end_time time without time zone,
  is_full_day boolean DEFAULT true,
  reason text,
  is_approved boolean DEFAULT true,
  approved_by uuid,
  approved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teacher_time_off_pkey PRIMARY KEY (id),
  CONSTRAINT teacher_time_off_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT teacher_time_off_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.teachers (
  id uuid NOT NULL,
  hourly_rate numeric DEFAULT 0.00,
  currency text DEFAULT 'USD'::text,
  subjects ARRAY DEFAULT '{}'::text[],
  specialties ARRAY DEFAULT '{}'::text[],
  education ARRAY DEFAULT '{}'::text[],
  experience_years integer DEFAULT 0,
  rating numeric DEFAULT 0.00,
  total_reviews integer DEFAULT 0,
  total_students integer DEFAULT 0,
  total_sessions integer DEFAULT 0,
  availability jsonb DEFAULT '{}'::jsonb,
  max_students integer DEFAULT 20,
  is_available boolean DEFAULT true,
  verification_status text DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['pending'::text, 'verified'::text, 'rejected'::text])),
  verification_documents ARRAY DEFAULT '{}'::text[],
  bank_account_info jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  zoom_connected boolean DEFAULT false,
  zoom_email text,
  profile_image_url text,
  cover_image_url text,
  teaching_philosophy text,
  certifications jsonb DEFAULT '[]'::jsonb,
  languages ARRAY DEFAULT '{}'::text[],
  social_links jsonb DEFAULT '{}'::jsonb,
  timezone text DEFAULT 'UTC'::text,
  notification_preferences jsonb DEFAULT '{}'::jsonb,
  tsc_number text UNIQUE,
  CONSTRAINT teachers_pkey PRIMARY KEY (id),
  CONSTRAINT teachers_id_fkey FOREIGN KEY (id) REFERENCES public.profiles(id)
);
CREATE TABLE public.token_pricing (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_type text NOT NULL CHECK (user_type = ANY (ARRAY['student'::text, 'teacher'::text])),
  tokens_per_dollar numeric NOT NULL,
  dollars_per_token numeric NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT token_pricing_pkey PRIMARY KEY (id)
);
CREATE TABLE public.token_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['purchase'::text, 'earn'::text, 'spend'::text, 'transfer'::text, 'bonus'::text, 'refund'::text, 'withdrawal'::text])),
  amount_tokens integer NOT NULL,
  amount_usd numeric NOT NULL,
  token_rate numeric NOT NULL,
  description text NOT NULL,
  related_entity_type text CHECK (related_entity_type = ANY (ARRAY['class_session'::text, 'package'::text, 'bonus'::text, 'refund'::text, 'withdrawal'::text, 'transfer'::text])),
  related_entity_id uuid,
  payment_method_id uuid,
  status text DEFAULT 'completed'::text CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  reference_id text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  wallet_id uuid,
  balance_after numeric DEFAULT 0.00,
  transaction_type text CHECK (transaction_type = ANY (ARRAY['purchase'::text, 'earning'::text, 'deduction'::text, 'refund'::text, 'bonus'::text, 'penalty'::text, 'transfer'::text])),
  CONSTRAINT token_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT token_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT token_transactions_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES public.payment_methods(id),
  CONSTRAINT token_transactions_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES public.wallets(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wallet_id uuid NOT NULL,
  user_id uuid NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['deposit'::text, 'withdrawal'::text, 'payment'::text, 'refund'::text, 'bonus'::text, 'fee'::text])),
  amount numeric NOT NULL,
  currency text DEFAULT 'USD'::text,
  description text NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  reference_id text,
  metadata jsonb DEFAULT '{}'::jsonb,
  related_entity_type text,
  related_entity_id uuid,
  processed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES public.wallets(id),
  CONSTRAINT transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wallets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  balance numeric DEFAULT 0.00,
  currency text DEFAULT 'USD'::text,
  tokens integer DEFAULT 0,
  frozen_amount numeric DEFAULT 0.00,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  locked_balance numeric DEFAULT 0.00,
  token_balance numeric DEFAULT 0.00,
  CONSTRAINT wallets_pkey PRIMARY KEY (id),
  CONSTRAINT wallets_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.withdrawal_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL,
  amount_usd numeric NOT NULL,
  amount_tokens integer NOT NULL,
  payment_method_id uuid,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  processing_fee numeric DEFAULT 0.00,
  net_amount numeric NOT NULL,
  reference_id text,
  failure_reason text,
  processed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  wallet_id uuid,
  tokens_to_convert numeric,
  conversion_rate numeric,
  provider text DEFAULT 'stripe'::text CHECK (provider = ANY (ARRAY['stripe'::text, 'mpesa'::text, 'bank_transfer'::text])),
  provider_transaction_id text,
  provider_response jsonb,
  completed_at timestamp with time zone,
  CONSTRAINT withdrawal_requests_pkey PRIMARY KEY (id),
  CONSTRAINT withdrawal_requests_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT withdrawal_requests_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES public.payment_methods(id),
  CONSTRAINT withdrawal_requests_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES public.wallets(id)
);
CREATE TABLE public.zoom_accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  teacher_id uuid NOT NULL UNIQUE,
  zoom_user_id text NOT NULL UNIQUE,
  email text NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  personal_meeting_url text,
  api_key text,
  api_secret text,
  access_token text,
  refresh_token text,
  token_expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT zoom_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT zoom_accounts_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id)
);
CREATE TABLE public.zoom_meetings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  meeting_id text NOT NULL UNIQUE,
  teacher_id uuid NOT NULL,
  class_session_id uuid,
  topic text NOT NULL,
  description text,
  start_time timestamp with time zone NOT NULL,
  duration_minutes integer NOT NULL,
  timezone text DEFAULT 'UTC'::text,
  join_url text NOT NULL,
  start_url text NOT NULL,
  password text,
  meeting_type integer DEFAULT 2,
  status text DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'started'::text, 'ended'::text, 'cancelled'::text])),
  recording_url text,
  participants_count integer DEFAULT 0,
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT zoom_meetings_pkey PRIMARY KEY (id),
  CONSTRAINT zoom_meetings_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id),
  CONSTRAINT zoom_meetings_class_session_id_fkey FOREIGN KEY (class_session_id) REFERENCES public.class_sessions(id)
);
